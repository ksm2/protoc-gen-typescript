name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "The version bump to perform"
        required: true
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      version: "v${{ steps.bump.outputs.version }}"
      id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Bump version
        id: bump
        uses: ksm2/protokollant-action@v1
        with:
          bump: ${{ inputs.bump }}

      - name: Git tag and push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "release: ${{ steps.bump.outputs.version }}"
          tagging_message: "v${{ steps.bump.outputs.version }}"

      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.bump.outputs.version }}"
          release_name: "v${{ steps.bump.outputs.version }}"
          draft: true
          prerelease: false

  build:
    needs: release

    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            target: 'x86_64-unknown-linux-gnu'
            os: 'linux'
            platform: 'amd64'
            archive: 'tar.gz'
          - runs-on: macos-latest
            target: 'x86_64-apple-darwin'
            os: 'darwin'
            platform: 'amd64'
            archive: 'tar.gz'
          - runs-on: macos-latest
            target: 'aarch64-apple-darwin'
            os: 'darwin'
            platform: 'arm64'
            archive: 'tar.gz'
          - runs-on: windows-latest
            target: 'x86_64-pc-windows-msvc'
            os: 'windows'
            platform: 'amd64'
            archive: 'zip'

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.release.outputs.version }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Produce archive
        id: archive
        uses: ksm2/archive-action@v1
        with:
          root-directory: target/${{ matrix.target }}/release
          format: ${{ matrix.archive }}
          name: protoc-gen-typescript-${{ needs.release.outputs.version }}-${{ matrix.os }}-${{ matrix.platform }}
          include: 'protoc-gen-typescript?(.exe)'

      - name: Upload binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.archive.outputs.path }}
          asset_name: ${{ steps.archive.outputs.name }}
          asset_content_type: ${{ steps.archive.outputs.media-type }}

  publish:
    runs-on: ubuntu-latest
    needs:
      - release
      - build
    steps:
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release.outputs.id }}

  next_iteration:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Next iteration
        uses: ksm2/protokollant-action@v1
        with:
          bump: prerelease
          unreleased: true
          changelog: false

      - name: Git push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: start next iteration"
